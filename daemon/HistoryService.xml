<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:dox="http://www.ayatana.org/dbus/dox.dtd">
    <dox:d><![CDATA[
      @mainpage

      An interface to the history service
    ]]></dox:d>
    <interface name="com.canonical.HistoryService" xmlns:dox="http://www.ayatana.org/dbus/dox.dtd">
        <dox:d>
          An interface to the history service
        </dox:d>
        <method name="ThreadForProperties">
            <dox:d><![CDATA[
                Return an existing thread for the given parameters.
            ]]></dox:d>
            <arg name="accountId" type="s" direction="in"/>
            <arg name="type" type="i" direction="in"/>
            <arg name="properties" type="a{sv}" direction="in"/>
            <arg name="matchFlags" type="i" direction="in"/>
            <arg name="create" type="b" direction="in"/>
            <arg type="a{sv}" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
        </method>

        <method name="ThreadForParticipants">
            <dox:d><![CDATA[
                Return an existing thread for the given parameters.
            ]]></dox:d>
            <arg name="accountId" type="s" direction="in"/>
            <arg name="type" type="i" direction="in"/>
            <arg name="participants" type="as" direction="in"/>
            <arg name="matchFlags" type="i" direction="in"/>
            <arg name="create" type="b" direction="in"/>
            <arg type="a{sv}" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
        </method>
        <method name="ParticipantsForThreads">
            <dox:d><![CDATA[
                Return the participants for the given threads
            ]]></dox:d>
            <arg name="threadIds" type="a(a{sv})" direction="in"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
            <arg name="participants" type="a(a{sv})" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QList &lt; QVariantMap &gt;"/>
        </method>
        <method name="WriteEvents">
            <dox:d><![CDATA[
                Write the given events to the storage.
                Returns true if succeeded in writing the events.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})" direction="in"/>
            <arg type="b" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </method>
        <method name="RemoveEvents">
            <dox:d><![CDATA[
                Remove the given events from the storage.
                Returns true if succeeded in removing the events.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})" direction="in"/>
            <arg type="b" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </method>
        <method name="RemoveEventsBy">
            <dox:d><![CDATA[
                Remove events from the storage given the type and filter
                Returns true if succeeded in removing the events.
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="filter" type="a{sv}" direction="in"/>
            <arg name="sort" type="a{sv}" direction="in"/>
            <arg type="b" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
        </method>
        <method name="EventsCount">
            <dox:d><![CDATA[
                Count the number of events from the storage given the type and filter
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="filter" type="a{sv}" direction="in"/>
            <arg type="i" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
        </method>
        <method name="RemoveThreads">
            <dox:d><![CDATA[
                Remove the given threads from the storage.
                Returns true if succeeded in removing the threads.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})" direction="in"/>
            <arg type="b" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </method>
        <method name="MarkThreadsAsRead">
            <dox:d><![CDATA[
                Mark an entire thread as read
            ]]></dox:d>
            <arg name="threads" type="a(a{sv})" direction="in"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </method>
        <method name="QueryThreads">
            <dox:d><![CDATA[
                Creates a threads view with the given filter and sort order.
                Returns the object path to the created view.
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="sort" type="a{sv}" direction="in"/>
            <arg name="filter" type="a{sv}" direction="in"/>
            <arg name="properties" type="a{sv}" direction="in"/>
            <arg type="s" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In3" value="QVariantMap"/>
        </method>
        <method name="QueryEvents">
            <dox:d><![CDATA[
                Creates an events view with the given filter and sort order.
                Returns the object path to the created view.
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="sort" type="a{sv}" direction="in"/>
            <arg name="filter" type="a{sv}" direction="in"/>
            <arg type="s" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
        </method>
        <method name="GetSingleThread">
            <dox:d><![CDATA[
                Returns one single thread for the given parameters
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="accountId" type="s" direction="in"/>
            <arg name="threadId" type="s" direction="in"/>
            <arg name="properties" type="a{sv}" direction="in"/>
            <arg type="a{sv}" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In3" value="QVariantMap"/>
        </method>
        <method name="GetSingleEvent">
            <dox:d><![CDATA[
                Returns one single event for the given parameters
            ]]></dox:d>
            <arg name="type" type="i" direction="in"/>
            <arg name="accountId" type="s" direction="in"/>
            <arg name="threadId" type="s" direction="in"/>
            <arg name="eventId" type="s" direction="in"/>
            <arg type="a{sv}" direction="out"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
        </method>
        <signal name="ThreadsAdded">
            <dox:d><![CDATA[
                Threads were added to the storage. The argument is a list of threads.
                Each thread is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="threads" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="ThreadsModified">
            <dox:d><![CDATA[
                Threads were modified in the storage. The argument is a list of threads.
                Each thread is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="threads" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="ThreadsRemoved">
            <dox:d><![CDATA[
                Threads were removed from the storage. The argument is a list of threads.
                Each thread is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="threads" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="EventsAdded">
            <dox:d><![CDATA[
                Events were added to the storage. The argument is a list of events.
                Each event is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="EventsModified">
            <dox:d><![CDATA[
                Events were modified in the storage. The argument is a list of events.
                Each event is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="EventsRemoved">
            <dox:d><![CDATA[
                Events were removed from the storage. The argument is a list of events.
                Each event is represented by a QVariantMap of its properties.
            ]]></dox:d>
            <arg name="events" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QList &lt; QVariantMap &gt;"/>
        </signal>
        <signal name="ThreadParticipantsChanged">
            <dox:d><![CDATA[
                Participants changed in a certain thread changed.
            ]]></dox:d>
            <arg name="thread" type="a{sv}"/>
            <arg name="added" type="a(a{sv})"/>
            <arg name="removed" type="a(a{sv})"/>
            <arg name="modified" type="a(a{sv})"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QVariantMap"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QList &lt; QVariantMap &gt;"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QList &lt; QVariantMap &gt;"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In3" value="QList &lt; QVariantMap &gt;"/>
        </signal>
    </interface>
</node>
